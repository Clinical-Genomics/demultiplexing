get_basemask() {
    local RUNDIR=${1?'please provide a run dir'}
    # get the index lengths
    local SAMPLE_INDEX=( $(cat ${RUNDIR}/SampleSheet.csv | sed -n "2p" | sed -e 's/,/\n/g' ) )
    SAMPLE_INDEX=( $( echo ${SAMPLE_INDEX[4]} | sed -e 's/-/\n/g' ) )
    local LEN_SAMPLE_INDEX1=${#SAMPLE_INDEX[0]}
    local LEN_SAMPLE_INDEX2=${#SAMPLE_INDEX[1]}

    ## determine index length of run
    local indexread1count=$(grep IndexRead1 ${RUNDIR}/runParameters.xml | sed 's/<\/IndexRead1>\r//' | sed 's/    <IndexRead1>//')
    local indexread2count=$(grep IndexRead2 ${RUNDIR}/runParameters.xml | sed 's/<\/IndexRead2>\r//' | sed 's/    <IndexRead2>//')
    local LEN_Y1=$(grep \<Read1\> ${RUNDIR}/runParameters.xml | sed 's/<\/Read1>\r//' | sed 's/    <Read1>//')
    local LEN_Y2=$(grep \<Read2\> ${RUNDIR}/runParameters.xml | sed 's/<\/Read2>\r//' | sed 's/    <Read2>//')

    # determine index1 length
    # http://stackoverflow.com/a/5349772/322188
    local I1n=$(head -c $(( ${indexread1count} - ${LEN_SAMPLE_INDEX1} )) < /dev/zero | tr '\0' 'n') # print 'n' n times
    local I1="I${LEN_SAMPLE_INDEX1}${I1n}"
    local I2=''

    # determine index2 length
    if [[ ${indexread2count} -gt 0 ]]; then # dual
        if [[ ${LEN_SAMPLE_INDEX2} -gt 0 ]]; then
            I2="I${LEN_SAMPLE_INDEX2}"
        fi
        I2n=$(head -c $(( ${indexread2count} - ${LEN_SAMPLE_INDEX2} )) < /dev/zero | tr '\0' 'n') # print 'n' n times
        I2=",${I2}${I2n}"
    fi

    # determine read2
    local Y1=Y${LEN_Y1}
    local Y2=
    if [[ ${LEN_Y2} -gt 0 ]]; then
        Y2=,Y${LEN_Y2}
    fi

    # put the basemask together
    local BASEMASK="${Y1},${I1}${I2}${Y2}"

    echo ${BASEMASK}
    return 0
}
