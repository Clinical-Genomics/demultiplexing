#!/bin/bash
#SBATCH -t 04:00:00
#SBATCH -c 1
#SBATCH -A prod001
#SBATCH -J xpostface
#SBATCH --qos=high
#SBATCH --output=/mnt/hds/proj/bioinfo/LOG/xdem-postface-%j.out
#SBATCH --error=/mnt/hds/proj/bioinfo/LOG/xdem-postface-%j.err
#SBATCH --mail-type=FAIL
#SBATCH --mail-user=bioinfo.clinical@scilifelab.se

set -eu -o pipefail

##########
# PARAMS #
##########

VERSION=4.0.2
DEMUXDIR=${1?'absolute path to the DEMUX/rundir'}
EMAIL=bioinfo.clinical@scilifelab.se

#############
# FUNCTIONS #
#############

log() {
    NOW=$(date +"%Y%m%d%H%M%S")
    echo [${NOW}] $@
}

failed() {
    echo "Error on line number $1." | mail -s "ERROR $0 in $(basename $DEMUXDIR)" ${EMAIL}
}
trap 'failed $LINENO' ERR

########
# INIT #
########

log "VERSION ${VERSION}"
log "INDIR: ${DEMUXDIR}"
#SCRIPTDIR=$(dirname $(readlink -nm $0)) # takes the invocation dir on SLURM
SCRIPTDIR=/mnt/hds/proj/bioinfo/SCRIPTS/

# remove copy control files
rm -Rf ${DEMUXDIR}/copybackcomplete/

# create the stats file per lane
# needs python 2.7+ !
log "/home/hiseq.clinical/miniconda/envs/prod/bin/python ${SCRIPTDIR}/xcreatestats.py ${DEMUXDIR} > ${DEMUXDIR}/stats.txt"
python ${SCRIPTDIR}/xcreatestats.py ${DEMUXDIR} > ${DEMUXDIR}/stats.txt

# create the Unaligned directory structure
log "bash ${SCRIPTDIR}/xcreateunaligned.bash ${DEMUXDIR} > ${DEMUXDIR}/LOG/xcreateunaligned.`date +'%Y%m%d%H%M%S'`.log"
bash ${SCRIPTDIR}/xcreateunaligned.bash ${DEMUXDIR} > ${DEMUXDIR}/LOG/xcreateunaligned.`date +'%Y%m%d%H%M%S'`.log

# add the run to clinstatsdb
# relies on permanent ssh tunnel at 3308, which is not present on the nodes - now gets executed in the checkfornewdemux.sh script
#log "python ${SCRIPTDIR}/xparseunaligned.py ${DEMUXDIR} &> ${DEMUXDIR}/LOG/xparseunaligned.`date +'%Y%m%d%H%M%S'`.log"
#/home/hiseq.clinical/miniconda/envs/prod/bin/python ${SCRIPTDIR}/xparseunaligned.py ${DEMUXDIR} &> ${DEMUXDIR}/LOG/xparseunaligned.`date +'%Y%m%d%H%M%S'`.log

# calculate Undetermined stats
log "bash ${SCRIPTDIR}/xundetermined.bash ${DEMUXDIR}/"
bash ${SCRIPTDIR}/xundetermined.bash ${DEMUXDIR}/

# make sure we signal the rest of the pipeline all processing is done now
log "date +'%Y%m%d%H%M%S' > ${DEMUXDIR}/copycomplete.txt"
date +'%Y%m%d%H%M%S' > ${DEMUXDIR}/copycomplete.txt

mail -s "$(basename ${DEMUXDIR}) finished demultiplexing" $EMAIL
